apiVersion: {{ include "source-controller.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "source-controller.fullname" . }}
  labels:
    {{- include "source-controller.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "source-controller.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "source-controller.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "source-controller.serviceAccountName" . }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
        - --watch-all-namespaces={{ default .Values.watchAllNamespaces true }}
        - --concurrent={{ default .Values.reconcilers 2 }}
        - --log-level={{ default .Values.logLevel "info" }}
        - --log-encoding={{ default .Values.logEncoding "json" }}
        - --enable-leader-election
        - --storage-path=/data
        - --storage-adv-addr={{ include "source-controller.fullname" . }}.$(RUNTIME_NAMESPACE).svc.cluster.local.
        env:
        - name: RUNTIME_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: http
          containerPort: 9090
        - name: prometheus
          containerPort: 8080
        - name: healthz
          containerPort: 9440
        readinessProbe:
          httpGet:
              path: /healthz
              port: healthz
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /tmp
          name: tmp
      securityContext:
        fsGroup: 1337
      terminationGracePeriodSeconds: 10
      volumes:
      - emptyDir: {}
        name: data
      - emptyDir: {}
        name: tmp
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
